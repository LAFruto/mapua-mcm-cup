/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _ParticipantToTeam {
  A: number;
  B: number;
}

export interface _PrismaMigrations {
  applied_steps_count: Generated<number>;
  checksum: string;
  finished_at: Timestamp | null;
  id: string;
  logs: string | null;
  migration_name: string;
  rolled_back_at: Timestamp | null;
  started_at: Generated<Timestamp>;
}

export interface Activity {
  activityTypeId: number;
  altName: string;
  banner: string;
  endDateTime: Timestamp;
  id: Generated<number>;
  image: string;
  isOverall: boolean;
  isScored: boolean;
  name: string;
  startDateTime: Timestamp;
  url: string;
}

export interface ActivityType {
  id: Generated<number>;
  name: string;
}

export interface Category {
  activityId: number;
  id: Generated<number>;
  name: string;
}

export interface Cluster {
  altName: string;
  id: Generated<number>;
  image: string;
  name: string;
  num: number;
}

export interface Participant {
  activityId: number;
  altName: string | null;
  clusterId: number;
  id: Generated<number>;
  name: string;
}

export interface Tally {
  activityId: number;
  categoryId: number | null;
  clusterId: number;
  id: Generated<number>;
  participantId: number | null;
  rank: number;
  score: number | null;
  teamId: number | null;
  total: number | null;
}

export interface Team {
  activityId: number;
  clusterId: number;
  id: Generated<number>;
  name: string;
  num: number | null;
}

export interface DB {
  _ParticipantToTeam: _ParticipantToTeam;
  _prisma_migrations: _PrismaMigrations;
  Activity: Activity;
  ActivityType: ActivityType;
  Category: Category;
  Cluster: Cluster;
  Participant: Participant;
  Tally: Tally;
  Team: Team;
}
